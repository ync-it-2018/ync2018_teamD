<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.ync.project.mapper.memberMapper">

<!-- <select id="memberList" resultType="memberVO"> 
부등호 <,>를 사용하기 위해서 필요한 부분 : CDATA 
	SELECT 	
		MEMBER_ID,
		MEMBER_FIANAME,
		MEMBER_JOINDATE
	FROM 
		td_member
</select> -->

<select id="read" resultType="memberVO">
	select  
		member_id,
		member_password,
		member_pnumber,
		member_address,
		member_out,
		n.nation_name,
		member_fianame,
		member_laname,
		member_joindate
	from 	
		td_member m, td_nation n
	where	
		member_id = #{member_id}
	and
		m.nation_code = n.nation_code
</select>

<select id="listCriteria" resultType="memberVO">
<![CDATA[
	select	
		member_id,
		member_fianame,
		to_char(member_joindate, 'yyyy-mm-dd') as "member_joindate",
		member_out,
		member_idx
	from	(select  /*+INDEX_DESC(td_member td_member_idx)*/
        			rownum rn,
       				member_id,
       				member_fianame,
       				member_joindate,
       				member_out,
       				member_idx
     	 	 from
       				td_member
    	 	 where
        			rownum <= #{page} * #{perPageNum}
        	 and
        	 		member_out = 1
        	 )
	where
    	rn > (#{page} -1) * #{perPageNum}
]]>
</select> 
<select id="outmemberlist" resultType="memberVO">
<![CDATA[
	select	
		member_id,
		member_fianame,
		to_char(member_joindate, 'yyyy-mm-dd') as "member_joindate",
		decode(member_out, 2, '강제탈퇴', 3, '개인탈퇴') as "member_out",
		member_idx
	from	(select  /*+INDEX_DESC(td_member td_member_idx)*/
        			rownum rn,
       				member_id,
       				member_fianame,
       				member_joindate,
       				member_out,
       				member_idx
     	 	 from
       				td_member
    	 	 where
        			rownum <= #{page} * #{perPageNum}
        	 and
        	 		member_out <> 1
        	 )
	where
    	rn > (#{page} -1) * #{perPageNum}
 ]]>
</select> 
<sql id="search">
	<if test="searchType != null" >
		<if test="searchType == 't'.toString()">
			AND title LIKE '%'|| #{keyword}||'%'
		</if>
		<if test="searchType == 'c'.toString()">
			AND content LIKE '%'|| #{keyword}||'%'
		</if>
		<if test="searchType == 'w'.toString()">
			AND writer LIKE '%'|| #{keyword}||'%'
		</if>    
		<if test="searchType == 'tc'.toString()">
			AND (title LIKE '%'|| #{keyword}||'%' OR content LIKE '%'|| #{keyword}||'%')
		</if>      
	</if>
</sql>
<select id="listSearchCount"  resultType="int">
	<![CDATA[
		SELECT	count(member_id)
		FROM	td_member
	]]>
	
	<where>
		<include refid="search"></include>
		<![CDATA[
			AND rownum > 0
			and member_out = 1
		]]>
	</where>
</select>
<select id = "readbooking" resultType = "memberVO">
	<![CDATA[
		SELECT
			h.hotel_name,
			r.room_name,
			to_char(booking_in_date, 'yyyy-mm-dd') as "booking_in_date",
			to_char(booking_out_date, 'yyyy-mm-dd') as "booking_out_date" 
		FROM
			td_room r, td_booking b, td_hotel h
		WHERE
			r.room_idx = b.room_idx
		AND
			r.hotel_code = b.hotel_code
		AND
			b.hotel_code = h.hotel_code
		AND
			booking_in_date > SYSDATE
		AND
			member_id = #{member_id}
	]]>
</select>
<select id = "readbookingEnd" resultType = "memberVO">
	<![CDATA[
		SELECT
			h.hotel_name,
			r.room_name,
			to_char(booking_in_date, 'yyyy-mm-dd') as "booking_in_date",
			to_char(booking_out_date, 'yyyy-mm-dd') as "booking_out_date" 
		FROM
			td_room r, td_booking b, td_hotel h
		WHERE
			r.room_idx = b.room_idx
		AND
			r.hotel_code = b.hotel_code
		AND
			b.hotel_code = h.hotel_code
		AND
			booking_out_date < SYSDATE
		AND
			member_id = #{member_id}
	]]>
</select>
<!-- <select id="mcountPaging" resultType="int">
<![CDATA[
	select	
		count(MEMBER_ID)
	from	
		td_member
]]>
</select> -->
</mapper>
